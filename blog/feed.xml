<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Finagle blog</title>
  <id>https://finagle.github.io/blog</id>
  <link href="https://finagle.github.io/blog"/>
  <link href="https://finagle.github.io/blog/blog/feed.xml" rel="self"/>
  <updated>2017-04-05T17:00:00-07:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>ðŸŒ‡ Upcoming module removals ðŸŒ‡</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2017/04/06/announce-removals/"/>
    <id>https://finagle.github.io/blog/2017/04/06/announce-removals/</id>
    <published>2017-04-05T17:00:00-07:00</published>
    <updated>2017-04-06T10:52:00-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;As mentioned in our &lt;a href="https://finagle.github.io/blog/2017/03/20/spring-planning/"&gt;spring planning notes&lt;/a&gt;, we are sunsetting a number of modules that have been unsupported or exist in a zombie-like state.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;finagle-ostrich4&lt;/li&gt;
&lt;li&gt;finagle-kestrel&lt;/li&gt;
&lt;li&gt;finagle-stream&lt;/li&gt;
&lt;li&gt;finagle-native&lt;/li&gt;
&lt;li&gt;finagle-mdns&lt;/li&gt;
&lt;li&gt;util-eval&lt;/li&gt;
&lt;li&gt;ostrich&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The upcoming April release will be their final one. Due to Ostrich being a separate project it will not be removed immediately.&lt;/p&gt;

&lt;p&gt;Please feel free to ask questions on the &lt;a href="https://groups.google.com/forum/#!forum/finaglers"&gt;mailing list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Kevin Oliver and the Core Systems Libraries team&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>ðŸŒ» Spring Planning ðŸŒ»</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2017/03/20/spring-planning/"/>
    <id>https://finagle.github.io/blog/2017/03/20/spring-planning/</id>
    <published>2017-03-19T17:00:00-07:00</published>
    <updated>2017-03-20T16:42:40-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;The team working on &lt;a href="https://twitter.github.io/finagle/"&gt;Finagle&lt;/a&gt;, &lt;a href="https://twitter.github.io/finatra/"&gt;Finatra&lt;/a&gt;, and related libraries met last week and did our planning for the next three months. These are high-level goals and as such, have varying degrees of confidence and certainty.&lt;/p&gt;

&lt;h4&gt;In the spirit of Spring cleaning:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Remove Netty 3 support from most protocols. We expect to complete most protocols, however HTTP is a long shot.&lt;/li&gt;
&lt;li&gt;Upgrade &lt;a href="https://thrift.apache.org/"&gt;libthrift&lt;/a&gt; to 0.10.0 from the ancient fork of 0.5.0. (&lt;a href="https://github.com/twitter/scrooge/issues/85"&gt;twitter/scrooge#85&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Deprecate and then remove modules that are unsupported or exist in a zombie-like state. This includes &lt;a href="https://github.com/twitter/ostrich"&gt;ostrich&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/tree/develop/finagle-ostrich4"&gt;finagle-ostrich4&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/tree/develop/finagle-kestrel"&gt;finagle-kestrel&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/tree/develop/finagle-stream"&gt;finagle-stream&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/tree/develop/finagle-native"&gt;finagle-native&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/tree/develop/finagle-mdns"&gt;finagle-mdns&lt;/a&gt;, and &lt;a href="https://github.com/twitter/util/tree/develop/util-eval"&gt;util-eval&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Minimize dependencies on &lt;a href="https://github.com/twitter/commons"&gt;twitter-commons&lt;/a&gt; with the eventual goal of removing all of them.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;For those interested in the shiny and new:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Get HTTP/2 to production level quality so that it becomes the default HTTP implementation.&lt;/li&gt;
&lt;li&gt;Continued SSL/TLS work, including STARTTLS support for Mux.&lt;/li&gt;
&lt;li&gt;Finish the work on &lt;a href="https://github.com/twitter/util/tree/develop/util-tunable"&gt;Tunables&lt;/a&gt; such that service owners can dynamically change configuration.&lt;/li&gt;
&lt;li&gt;Finish the work on &lt;a href="https://github.com/twitter/finagle/blob/develop/finagle-core/src/main/scala/com/twitter/finagle/client/MethodBuilder.scala"&gt;MethodBuilder&lt;/a&gt; as a replacement for ClientBuilder and the foundation for more enhancements.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;For those who like their tools polished:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Throughput improvements via changes to Futures, defaulting to the Netty 4 native transport, Netty 4 buffer pooling, and more.&lt;/li&gt;
&lt;li&gt;Switch the default &lt;a href="https://twitter.github.io/finagle/guide/Clients.html#load-balancing"&gt;load balancer&lt;/a&gt; to Aperture.&lt;/li&gt;
&lt;li&gt;Switch the default &lt;a href="https://twitter.github.io/finagle/guide/Clients.html#failure-accrual"&gt;failure accrual&lt;/a&gt; policy to success rate instead of consecutive failures.&lt;/li&gt;
&lt;li&gt;Move TwitterServer to use &lt;a href="https://www.slf4j.org/"&gt;slf4j&lt;/a&gt; for logging and begin the process of moving Util and Finagle.&lt;/li&gt;
&lt;li&gt;A handful of Scrooge changes to make the Scala generated code more composable, fixing &lt;a href="https://twitter.github.io/finagle/guide/Clients.html#response-classification"&gt;ResponseClassification&lt;/a&gt; for servers for example.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please feel free to ask questions on the &lt;a href="https://groups.google.com/forum/#!forum/finaglers"&gt;mailing list&lt;/a&gt; about anything that is unclear and weâ€™ll help clarify if you would like to know more.&lt;/p&gt;

&lt;p&gt;Kevin Oliver and the Core Systems Libraries team&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Finagle 6.43 Release Notes</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2017/03/14/release-notes-6-43/"/>
    <id>https://finagle.github.io/blog/2017/03/14/release-notes-6-43/</id>
    <published>2017-03-13T17:00:00-07:00</published>
    <updated>2017-03-14T10:32:38-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;The March releases are hot off the printing press for &lt;a href="https://github.com/twitter/finagle/blob/finagle-6.43.0/CHANGES"&gt;Finagle 6.43.0&lt;/a&gt;, &lt;a href="https://github.com/twitter/finatra/blob/finatra-2.9.0/CHANGELOG.md"&gt;Finatra 2.9.0&lt;/a&gt;, &lt;a href="https://github.com/twitter/scrooge/blob/scrooge-4.15.0/CHANGES"&gt;Scrooge 4.15.0&lt;/a&gt;, &lt;a href="https://github.com/twitter/twitter-server/blob/twitter-server-1.28.0/CHANGES"&gt;TwitterServer 1.28.0&lt;/a&gt;, and &lt;a href="https://github.com/twitter/util/blob/util-6.42.0/CHANGES"&gt;Util 6.42.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hereâ€™s a few of the highlights:&lt;/p&gt;

&lt;h3&gt;Finatra&lt;/h3&gt;

&lt;p&gt;See &lt;a href="https://twitter.github.io/finatra/blog/2017/03/13/announcing-the-release-of-finatra-2-dot-9-0/"&gt;accompanying blog post&lt;/a&gt; for details.&lt;/p&gt;

&lt;h3&gt;Finagle&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;finagle-http now classifies server error status codes (500s) as failures. This affects success rate metrics and failure accrual. See the &lt;code&gt;com.twitter.finagle.http.serverErrorsAsFailuresV2&lt;/code&gt; &lt;a href="http://twitter.github.io/finagle/guide/Configuration.html#feature-toggles"&gt;toggle&lt;/a&gt; for opting out of this behavior. &lt;a href="https://github.com/twitter/finagle/commit/f34a73443679ac4fe76bc011bfb36a5b1abe9e5e"&gt;f34a7344&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The finagle-http APIs continue their trek to rid themselves of having Netty 3 in its public API.&lt;/li&gt;
&lt;li&gt;finagle-http now has experimental http/2 support. To try it out, pass the command line parameter &lt;code&gt;-com.twitter.finagle.toggle.flag.overrides=com.twitter.finagle.http.UseHttp2=1.0&lt;/code&gt;. Please let us know of any issues that you run into!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Scrooge&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The Scala code generator now supports annotations on enums, enum fields, services, and service functions. &lt;a href="https://github.com/twitter/scrooge/commit/4821b46eec45f8235ed15f196c2649cee5715323"&gt;4821b46e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Scala&amp;rsquo;s types for ServiceIfaces are now a &lt;code&gt;Service&lt;/code&gt; from &lt;code&gt;ThriftMethod.Args&lt;/code&gt; to &lt;code&gt;ThriftMethod.SuccessType&lt;/code&gt;, instead of &lt;code&gt;ThriftMethod.Args&lt;/code&gt; to &lt;code&gt;ThriftMethod.Result&lt;/code&gt;. This is a breaking API change though it should generally be easy to adapt existing code to it. &lt;a href="https://github.com/twitter/scrooge/commit/c5ea851546ba215b457fcf09b90e9f1857e954c3"&gt;c5ea8515&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Util&lt;/h3&gt;

&lt;p&gt;Our byte-level abstraction, &lt;code&gt;Buf&lt;/code&gt; got a fresh coat of paint:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Introduce &lt;code&gt;Buf.process&lt;/code&gt; for sequential processing of a &lt;code&gt;Buf&lt;/code&gt;. Finagle has been updated to use it where appropriate, leading to reductions in allocations. &lt;a href="https://github.com/twitter/util/commit/1df3646ffe420256516167591562f85c79498ec5"&gt;1df3646f&lt;/a&gt; and others&lt;/li&gt;
&lt;li&gt;Introduce &lt;code&gt;Buf.write(java.nio.ByteBuffer)&lt;/code&gt; for writing to NIO &lt;code&gt;ByteBuffers&lt;/code&gt;. &lt;a href="https://github.com/twitter/util/commit/d6f7985e2014cc8c3dab71417a450900cd769f5d"&gt;d6f7985e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Buf.concat&lt;/code&gt; is now a constant time operation. &lt;a href="https://github.com/twitter/util/commit/bb05f425c6b12d1b2fe9f1a75658aba175fc51f8"&gt;bb05f425&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ConcatBuf&lt;/code&gt; has been removed, replaced by &lt;code&gt;Buf.apply&lt;/code&gt; and &lt;code&gt;Buf.Composite&lt;/code&gt;. &lt;a href="https://github.com/twitter/util/commit/5833c5609b8ad72cd542e34d9d6edecd143e3bad"&gt;5833c560&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Dependencies&lt;/h3&gt;

&lt;p&gt;Guava has been upgraded to version 19.0 from 16.0.1 &lt;a href="https://github.com/twitter/util/commit/d6bdecc9269c34e477b1ce1a6e8f5d22a106e2f9"&gt;d6bdecc9&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Changelogs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/finagle/blob/finagle-6.43.0/CHANGES"&gt;Finagle 6.43.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/util/blob/util-6.42.0/CHANGES"&gt;Util 6.42.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/scrooge/blob/scrooge-4.15.0/CHANGES"&gt;Scrooge 4.15.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/twitter-server/blob/twitter-server-1.28.0/CHANGES"&gt;TwitterServer 1.28.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/finatra/blob/finatra-2.9.0/CHANGELOG.md"&gt;Finatra 2.9.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Netty 4 support in Finagle</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2017/02/06/finagle-loves-netty4/"/>
    <id>https://finagle.github.io/blog/2017/02/06/finagle-loves-netty4/</id>
    <published>2017-02-05T16:00:00-08:00</published>
    <updated>2017-03-14T09:53:51-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;It&amp;rsquo;s been quite a while since the &lt;a href="http://finagle.github.io/blog/2014/10/20/upgrading-finagle-to-netty-4/"&gt;Netty 4 migration in Finagle&lt;/a&gt; was initially
announced. We&amp;rsquo;ve travelled a long way and are happy to announce that there is now (as of
&lt;a href="https://github.com/twitter/finagle/releases/tag/finagle-6.42.0"&gt;Finagle 6.42&lt;/a&gt;) support for Netty 4 transports in most of the protocols: Thrift, ThriftMux,
Memcached, MySQL, Kestrel, and Redis. Both HTTP/1.1 and HTTP/2 are coming soon!&lt;/p&gt;

&lt;h2&gt;How to enable Netty 4?&lt;/h2&gt;

&lt;p&gt;While we have not yet defaulted to Netty 4, we&amp;rsquo;ve been running it in production for several months
and have gained enough confidence to publicize the availability of the alternative transports in
Finagle.&lt;/p&gt;

&lt;p&gt;We encourage Finagle users to try out the new Netty 4 transports for their protocols and jump on the
fast track to upcoming changes around resiliency (think of HTTP/2) and performance (think of a
reduced allocation profile and better threading model in Netty 4).&lt;/p&gt;

&lt;p&gt;To switch the transport over to Netty 4 supply the following command line flag:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;-Dcom.twitter.finagle.toggle.flag.overrides=com.twitter.$protocol.UseNetty4=1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Where &lt;code&gt;$protocol&lt;/code&gt; is one of the following: &lt;code&gt;mux&lt;/code&gt; (use this for ThriftMux), &lt;code&gt;thrift&lt;/code&gt;, &lt;code&gt;mysql&lt;/code&gt;,
&lt;code&gt;memcached&lt;/code&gt;, &lt;code&gt;kestrel&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This command line flag overrides &lt;a href="https://twitter.github.io/finagle/guide/Configuration.html#feature-toggles"&gt;a feature toggle&lt;/a&gt; that is evaluated at application
startup and is &lt;em&gt;global for all clients/servers running on the same JVM instance&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Note that Netty 4 is already enabled by default in &lt;code&gt;finagle-redis&lt;/code&gt; so no need for an extra CLI flag.&lt;/p&gt;

&lt;h2&gt;What about HTTP/1.1?&lt;/h2&gt;

&lt;p&gt;HTTP/1.1 on Netty 4 is still a work in progress. There are known limitations for HTTP clients, but
we&amp;rsquo;ve been successfully running &lt;code&gt;finagle-http&lt;/code&gt; servers with Netty 4 in production for several weeks
and on &lt;a href="https://github.com/twitter/twitter-server"&gt;TwitterServer&lt;/a&gt;&amp;rsquo;s admin interface for several months.&lt;/p&gt;

&lt;p&gt;We feel confident in HTTP/1.1 servers running Netty 4 and encourage you to migrate now using the
toggle override. Please note that this will also switch HTTP clients running in the same JVM
process over to Netty 4, which we do not recommend at this point.&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;-Dcom.twitter.finagle.toggle.flag.overrides=com.twitter.http.UseNetty4=1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;What about HTTP/2?&lt;/h2&gt;

&lt;p&gt;HTTP/2 (i.e., &lt;code&gt;finagle-http2&lt;/code&gt;) should be considered beta as there are known issues with the ALPN
support. We&amp;rsquo;re hoping to roll out a feature-complete HTTP/2 implementation in the next couple of
months. In the meantime, HTTP/2 support can be experimentally enabled on any Finagle HTTP client
or server as shown below.&lt;/p&gt;
&lt;pre class="highlight scala"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.twitter.finagle.Http&lt;/span&gt;

&lt;span class="k"&gt;val&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="k"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;
  &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configured&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Http2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newService&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"www.example.com:80"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;What&amp;rsquo;s next?&lt;/h2&gt;

&lt;p&gt;We&amp;rsquo;re quite optimistic about enabling Netty 4 by default in the next couple of months. Even though
we&amp;rsquo;re not there yet, we feel very proud of the work we&amp;rsquo;ve done and the progress we&amp;rsquo;ve made. It took
us several years of engineering effort to be able to start serving Netty 4 traffic in production.&lt;/p&gt;

&lt;h2&gt;Where to report problems?&lt;/h2&gt;

&lt;p&gt;Please file a &lt;a href="https://github.com/twitter/finagle/issues"&gt;Github issue&lt;/a&gt; if anything doesn&amp;rsquo;t look right when Netty 4 is enabled.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Finagle 6.41 Release Notes</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2016/12/23/release-notes-6-41/"/>
    <id>https://finagle.github.io/blog/2016/12/23/release-notes-6-41/</id>
    <published>2016-12-22T16:00:00-08:00</published>
    <updated>2016-12-27T09:27:10-08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;As the year ends, we&amp;rsquo;ve got an exciting new release for you! Here&amp;rsquo;s a quick rundown
of what we&amp;rsquo;ve been up to.&lt;/p&gt;

&lt;h3&gt;Scala 2.12 Support is Here&lt;/h3&gt;

&lt;p&gt;Finagle, Util, Ostrich, Scrooge, and Twitter-Server are all now cross-compiled for Scala 2.11 and 2.12(!)&lt;/p&gt;

&lt;h3&gt;Dynamic Timeouts&lt;/h3&gt;

&lt;p&gt;The new &lt;a href="https://github.com/twitter/finagle/blob/finagle-6.41.0/finagle-core/src/main/scala/com/twitter/finagle/client/DynamicTimeout.scala"&gt;Dynamic Timeout module&lt;/a&gt; module allows clients to specify call-site specific timeouts. &lt;/p&gt;

&lt;h3&gt;Deadline Filter Rises from the Dead&lt;/h3&gt;

&lt;p&gt;We&amp;rsquo;ve resurrected &lt;a href="https://github.com/twitter/finagle/blob/finagle-6.41.0/finagle-core/src/main/scala/com/twitter/finagle/service/DeadlineFilter.scala"&gt;Deadline Filter&lt;/a&gt; as an optional module that can be added to clients and servers to reject requests with expired deadlines. If your calling clients are
well-prepared to handle the resulting NACKs, check out this filter.&lt;/p&gt;

&lt;h3&gt;Filtered ThriftMux Clients&lt;/h3&gt;

&lt;p&gt;You can now add filters (using the &lt;code&gt;.filtered&lt;/code&gt; method) on ThriftMux stack clients.&lt;/p&gt;

&lt;h3&gt;Turn it up to a 1.0&lt;/h3&gt;

&lt;p&gt;Toggles prove a convenient way to slowly roll out functionality. We&amp;rsquo;ve now promoted them
out of experimental. If you&amp;rsquo;d like to give them a go, check out the &lt;a href="http://twitter.github.io/finagle/guide/Configuration.html#feature-toggles"&gt;guide&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Next Year in&amp;hellip;.Finagle&lt;/h3&gt;

&lt;p&gt;The team is steadily working towards Netty 4. Since the last update, we&amp;rsquo;ve finished migrating
Memcached and MySQL, and Redis will come in the next release.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s to a great 2017!&lt;/p&gt;

&lt;h3&gt;Changelog&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/finagle/releases/tag/finagle-6.41.0"&gt;Finagle 6.41&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/util/releases/tag/util-6.40.0"&gt;Util 6.40&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/scrooge/releases/tag/scrooge-4.13.0"&gt;Scrooge 4.13&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/twitter-server/releases/tag/twitter-server-1.26.0"&gt;TwitterServer 1.26&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/finatra/releases/tag/finatra-2.7.0"&gt;Finatra 2.7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ostrich 9.24 (no changes, only dependency bump)&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Farewell, maven.twttr.com!</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2016/11/29/central-libthrift/"/>
    <id>https://finagle.github.io/blog/2016/11/29/central-libthrift/</id>
    <published>2016-11-28T16:00:00-08:00</published>
    <updated>2016-12-27T09:27:10-08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Historically Finagle has depended on a forked org.apache.thrift libthrift
version 0.5.x, which happens to not be published to the Central
Repository. We have published the artifact to maven.twttr.com,
but this requires users to add the maven.twttr.com repository as a
resolver for their project. This is normally not a serious problem for
most users, but historically maven.twttr.com has had a propensity to
be unreliable and inaccessible from certain locations. Our longterm
goal is to transition to a current version of Apache libthrift which is
hosted by the Central Repository, but there is a significant amount of
work we need to do internally before we can get there.&lt;/p&gt;

&lt;p&gt;However, we have good news: now maven.twttr.com is no longer required! We
have published a fork of libthrift v0.5.0 to the central repository
under the &amp;lsquo;com.twitter&amp;rsquo; organization. The class files still reside in
the &amp;#39;org.apache&amp;rsquo; namespace, so users can still upgrade to newer version
of libthrift as they wish, but doing so will now require manual exclusion
rules because the eviction mechanisms used by sbt rely on matching
organization names:&lt;/p&gt;
&lt;pre class="highlight scala"&gt;&lt;code&gt;&lt;span class="c1"&gt;// snippet from build.sbt script
&lt;/span&gt;&lt;span class="n"&gt;libraryDependencies&lt;/span&gt; &lt;span class="o"&gt;++=&lt;/span&gt; &lt;span class="nc"&gt;Seq&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="s"&gt;"com.twitter"&lt;/span&gt; &lt;span class="o"&gt;%%&lt;/span&gt; &lt;span class="s"&gt;"finagle-thrift"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="s"&gt;"6.40.0"&lt;/span&gt; &lt;span class="n"&gt;exclude&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"com.twitter"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"libthrift"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
  &lt;span class="s"&gt;"org.apache.thrift"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="s"&gt;"libthrift"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="s"&gt;"0.9.3"&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See the &lt;a href="http://www.scala-sbt.org/0.13/docs/Library-Management.html"&gt;sbt documentation on library management&lt;/a&gt;
for more details.&lt;/p&gt;
</content>
  </entry>
</feed>
